/* CSS reset adapted from https://www.joshwcomeau.com/css/custom-css-reset/ */

*, *::before, *::after {
    box-sizing: border-box;
  }
  
  * {
    margin: 0;
    padding: 0;
   
  }

  body {
    -webkit-font-smoothing: antialiased;
  }

  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  
  input, button, textarea, select {
    font: inherit;
  }
  
  p {
    line-height: 1.5;
  }

  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
    font-family: 'Helvetica', 'Arial', sans-serif;
    font-weight: normal;
    color: black;
    
  }
   a {
    text-decoration: none;
   }


/* Home page WORK SECTION */

#work-header {
    display: flex;
    justify-content: space-around;
}

h2 {
    color: #D00101;
    display: flex;
    justify-content: center;
    font-size: 5rem;
    letter-spacing: -0.2rem;
}

h3 {
    font-size: 2.5rem;
    letter-spacing: -0.16rem;
}

h4 {
    font-size: 1.25rem;
    letter-spacing: -0.05rem;
}

#arrow {
    width: 70px;
}

.project-box {
    visibility: hidden;
    max-height: 0;
    opacity: 0;
    display: flex;
    margin: 0 auto;
    transition: all 0.4s ease;
    justify-content: space-between;
    align-items: center;
}

a:hover .project-box {
    visibility: visible;
    opacity: 1;
    max-height: 300px;
}

.project-box#pb-1 {
    width: var(--width-1);
}

.project-box#pb-2 {
    width: var(--width-2);
}

.project-box#pb-3 {
    width: var(--width-3);
}

/* Home page images */

.spinner {
    overflow: hidden;
    width:100%;
}

.spinner-inner {
    --distance: 338px;
    display: flex;
    gap: 1rem;
    padding-block: 2rem;
    overflow: visible;
    flex-wrap: nowrap;
    filter: blur(15px);
    transition: filter .1s;
    animation: move 80s linear infinite;
    animation-play-state: paused;
    position: relative;
} 

.spinner-inner.reverse {
    animation: move-rev 80s linear infinite;
    animation-play-state: paused;
    border: 1px solid greenyellow;
}

a:hover .spinner-inner{
    
    filter: blur(0);
    transition: filter .2s;
    animation-play-state: running;
}



@keyframes move {
    to {
        transform: translate(calc(-100% - 1rem - var(--distance)));
    }
}

@keyframes move-rev {
    to {
        transform: translate(calc(100% + 1rem + var(--distance))); 
    }
}